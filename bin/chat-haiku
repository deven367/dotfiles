#!/Users/deven367/miniforge3/envs/torch/bin/python
import anthropic
from rich.console import Console
from rich.markdown import Markdown
from rich.prompt import Prompt


def find_pos(s, match):
    pos = s.find(match)
    return (pos, pos + len(match))


# Function to send a message to the OpenAI chatbot model and return its response
def send_message(message_log):
    api_key = open("/Users/deven367/anthropic-key.txt").read().strip()
    client = anthropic.Client(api_key=api_key)

    response = client.messages.create(
        model="claude-3-haiku-20240307",
        max_tokens=3800,
        system="Respond like a no non-sense assistant who answers to the point without any bullshit",
        messages=message_log,
    )
    return response.content[0].text


# Main function that runs the chatbot
def main():
    # Initialize the conversation history with a message from the chatbot
    # message_log = [{"role": "system", "content": "You are a helpful assistant."}]
    message_log = []

    # Set a flag to keep track of whether this is the first request in the conversation
    first_request = True

    console = Console()

    # Start a loop that runs until the user types "quit"
    while True:
        if first_request:
            # If this is the first request, get the user's input and add it to the conversation history
            # user_input = input("You: ")
            user_input = Prompt.ask("You   ")
            message_log.append(
                {"role": "user", "content": [{"type": "text", "text": user_input}]}
            )

            # Send the conversation history to the chatbot and get its response
            response = send_message(message_log)

            # Add the chatbot's response to the conversation history and print it to the console
            message_log.append({"role": "assistant", "content": [{"type": "text", "text": response}]})
            # print(f"AI assistant: {response}")

            console.print(Markdown(f"Haiku : {response}"))

            # Set the flag to False so that this branch is not executed again
            first_request = False
        else:
            # If this is not the first request, get the user's input and add it to the conversation history
            # user_input = input("You: ")
            user_input = Prompt.ask("You   ")

            # If the user types "quit", end the loop and print a goodbye message
            if user_input.lower() == "quit":
                # print("Goodbye!")
                console.print("Goodbye!")
                break

            message_log.append(
                {"role": "user", "content": [{"type": "text", "text": user_input}]}
            )

            # Send the conversation history to the chatbot and get its response
            response = send_message(message_log)

            # Add the chatbot's response to the conversation history and print it to the console
            message_log.append({"role": "assistant", "content": [{"type": "text", "text": response}]})
            # print(f"AI assistant: {response}")
            console.print(Markdown(f"Haiku : {response}"))


# Call the main function if this file is executed directly (not imported as a module)
if __name__ == "__main__":
    main()
